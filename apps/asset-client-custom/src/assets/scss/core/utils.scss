.cover {
  object-fit: cover;
}

@mixin divider {
  background-color: rgba(var(--main-darkgray), 0.3);
  opacity: 0.2;
}

.divider-vertical {
  @include divider;
  height: 16px;
  margin: 0 8px;
  width: 1px;
}

.divider-horizontal {
  @include divider;
  width: auto;
  height: 1px;
}

.tab-divider:not(:last-child)::after {
  @include divider;
  width: 1px;
  height: 8px;
  opacity: 1;
  content: '';
  position: absolute;
  right: -8px;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-default {
  cursor: default;
}

.pointer-events-none {
  pointer-events: none;
}

.hide-scroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.hide-scroll::-webkit-scrollbar {
  display: none;
}

.list-table-skeleton {
  border-radius: '16px';
  transform: 'inherit';
}

.overlay {
  background-color: rgba(var(--main-lightgray), 0.4);
  z-index: 3;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.sticky {
  position: fixed;
  top: var(--top-space);
  z-index: 2;
}

.sticky + * {
  margin-top: calc(var(--sub-menu-height));
}

.fixed-container {
  left: var(--left-space);
  right: var(--right-space);
  position: fixed;
  width: auto;
  transition: 0.5s;
  @media only screen and (min-width: 1800px) {
    left: auto;
    right: auto;
    max-width: calc(var(--xl) - var(--left-space) - var(--right-space));
    width: calc(var(--xl) - var(--left-space) - var(--right-space));
  }
  @media only screen and (max-width: 1200px) {
    left: 144px;
  }
}

.sticky-bottombar {
  @extend .fixed-container;
  justify-content: space-between;
  bottom: 8px;
  display: grid;
  grid-gap: 8px;
  grid-auto-flow: column;
  opacity: 0.9;
  align-items: center;
  padding: 8px;
}

// Currently not used. Maybe in the future
@mixin gradient-animation($normal, $hover, $transTime, $selector: ':hover') {
  background-size: 100%;
  background: $normal;
  position: relative;
  transition: opacity $transTime;
  &:before {
    border-radius: inherit;
    background: $hover;
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    z-index: -100;
    transition: opacity $transTime;
  }
  &#{$selector} {
    &:before {
      opacity: 1;
    }
  }
}
